package id.co.nds.catalogue.validators;

import id.co.nds.catalogue.exceptions.ClientExceptions;
import id.co.nds.catalogue.exceptions.NotFoundException;
import id.co.nds.catalogue.globals.GlobalConstant;

public class ProductValidator {
    public void nullCheckProductId(Integer id) throws ClientExceptions {
        if(id == null) {
            throw new ClientExceptions("Product id is required");
        }
    }

    public void notNullCheckProductId(Integer id) throws ClientExceptions {
        if(id != null) {
            throw new ClientExceptions("Product id is autogenerated, do not input id");
        }
    }

    public void nullCheckName(String name) throws ClientExceptions {
        if(name == null) {
            throw new ClientExceptions("Product name is required");
        }
    }

    public void nullCheckQuantity(Integer quantity) throws ClientExceptions {
        if(quantity == null) {
            throw new ClientExceptions("Product quantity is required");
        }
    }

    public void nullCheckCategoryId(String category_id) throws ClientExceptions {
        if(category_id == null) {
            throw new ClientExceptions("Product category id is required");
        }
    }
    
    public void nullCheckObject(Object o) throws NotFoundException {
        if(o == null) {
            throw new NotFoundException("Product is not found");
        }
    }

    public void validateProductId(Integer id) throws ClientExceptions {
        if(id <= 0) {
            throw new ClientExceptions("Product id input is invalid");
        }
    }

    public void validateName(String name) throws ClientExceptions {
        if(name.trim().equalsIgnoreCase("")) {
            throw new ClientExceptions("Product name is required");
        }
    }

    public void validateQuantity(Integer quantity) throws ClientExceptions {
        if(quantity < 0) {
            throw new ClientExceptions("Product quantity must be positive integer number");
        }
    }

    public void validateCategoryId(String categoryId) throws ClientExceptions {
        if(categoryId.length() != 6 || !categoryId.startsWith("PC")) {
            throw new ClientExceptions("Product category id contains six digits and starts with 'PC'");
        }
    }

    public void validateRecStatus(String id, String recStatus) throws ClientExceptions {
        if(recStatus.equalsIgnoreCase(GlobalConstant.REC_STATUS_NONACTIVE)) {
            throw new ClientExceptions("Product with id - " + id + " is already been deleted.");
        }
    }
}
